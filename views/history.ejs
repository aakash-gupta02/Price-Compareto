<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/png" href="/favicon-32x32.png">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Browsing History</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css"
      rel="stylesheet"
    />
    <style>
      :where([class^="ri-"])::before {
        content: "\f3c2";
      }
      .skeleton {
        animation: skeleton-loading 1s linear infinite alternate;
      }
      @keyframes skeleton-loading {
        0% {
          background-color: rgba(0, 0, 0, 0.05);
        }
        100% {
          background-color: rgba(0, 0, 0, 0.1);
        }
      }
      input[type="number"]::-webkit-inner-spin-button,
      input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      /* Keyframes for the bubbling hearts animation */
      @keyframes bubble {
        0% {
          transform: translateY(0) scale(0);
          opacity: 1;
        }
        100% {
          transform: translateY(-100vh) scale(1.5);
          opacity: 0;
        }
      }

      /* Heart styling */
      .heart {
        position: absolute;
        bottom: 0;
        left: 50%;
        width: 40px; /* Adjust size as needed */
        height: 40px; /* Adjust size as needed */
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="red"><path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/></svg>');
        background-size: contain;
        background-repeat: no-repeat;
        animation: bubble 2s ease-in-out forwards;
      }
    </style>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              primary: "#4F46E5",
              secondary: "#6B7280",
            },
            borderRadius: {
              none: "0px",
              sm: "4px",
              DEFAULT: "8px",
              md: "12px",
              lg: "16px",
              xl: "20px",
              "2xl": "24px",
              "3xl": "32px",
              full: "9999px",
              button: "8px",
            },
          },
        },
      };
    </script>
  </head>
  <body class="bg-gray-50 min-h-screen">
    <div class="max-w-7xl mx-auto py-2">
      <header class="mb-8">
        <header
          class="px-6 py-4 border-b flex items-center justify-between bg-white shadow-sm mb-6"
        >
          <div class="flex items-center gap-3">
            <a href="/">
              <span class="font-['Pacifico'] text-2xl text-primary"
                >Price Compareto</span
              ></a
            >
            <h1 class="text-xl font-semibold">History</h1>
          </div>
          <div class="flex items-center gap-3">
            <div class="hidden md:flex items-center space-x-8">
              <a href="/" class="text-gray-700 hover:text-primary">Home</a>
              <a href="/compare" class="text-gray-700 hover:text-primary"
                >Compare</a
              >
              <a href="/wishlist" class="wishlist-button">View Wishlist</a>

              <div class="flex gap-1">
                <div class="flex items-center gap-4">
                  <div class="relative">
                    <button
                      id="profileButton2"
                      class="flex items-center space-x-3 focus:outline-none !rounded-button"
                    >
                      <!-- <span class="text-gray-900 font-medium hover:text-primary"
                      >hello</span
                    > -->
                      <i class="ri-history-line text-indigo-600 text-xl"></i>

                      <i class="ri-arrow-down-s-line text-gray-400"></i>
                    </button>
                  </div>
                </div>

                <div class="modal-backdrop" id="modalBackdrop"></div>

                <div
                  id="profileModal"
                  class="hidden fixed right-4 top-20 w-80 bg-white rounded-lg shadow-lg z-50"
                >
                  <div class="p-6">
                    <div class="buttons mt-6 space-y-2">
                      <!-- <a href="/review">
                        <button
                          class="flex items-center w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-50 rounded !rounded-button"
                        >
                          <i
                            class="ri-star-line w-5 h-5 flex items-center justify-center mr-3"
                          ></i>

                          Reviews & Ratings
                        </button>
                      </a>

                      <a href="/history">
                        <button
                          class="flex items-center w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-50 rounded !rounded-button"
                        >
                          <i
                            class="ri-history-line w-5 h-5 flex items-center justify-center mr-3"
                          ></i>

                          History
                        </button>
                      </a>

                      <a href="/wishlist">
                        <button
                          class="flex items-center w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-50 rounded !rounded-button"
                        >
                          <i
                            class="ri-heart-add-2-line w-5 h-5 flex items-center justify-center mr-3"
                          ></i>
                          Wishlist
                        </button>
                      </a> -->
                    </div>

                    <div class="signout mt-6 pt-6 border-t border-gray-100">
                      <a href="#">
                        <button
                          id="clearHistory"
                          class="flex items-center w-full px-4 py-2 text-left text-red-600 hover:bg-red-50 rounded !rounded-button"
                        >
                          <i
                            class="ri-logout-box-line w-5 h-5 flex items-center justify-center mr-3"
                          ></i>
                          Clear History
                        </button>
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </header>
      </header>

      <!-- filter -->
      <div
        id="filterPanel"
        class="hidden bg-white p-6 rounded-lg shadow-sm mb-6 border border-gray-100"
      >
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label class="block text-sm font-medium mb-2">Date Range</label>
            <div class="flex gap-4">
              <input
                type="date"
                class="flex-1 px-3 py-2 border border-gray-200 rounded-button"
              />
              <input
                type="date"
                class="flex-1 px-3 py-2 border border-gray-200 rounded-button"
              />
            </div>
          </div>
          <div>
            <label class="block text-sm font-medium mb-2">Price Range</label>
            <div class="flex gap-4">
              <input
                type="number"
                placeholder="Min"
                class="flex-1 px-3 py-2 border border-gray-200 rounded-button"
              />
              <input
                type="number"
                placeholder="Max"
                class="flex-1 px-3 py-2 border border-gray-200 rounded-button"
              />
            </div>
          </div>
          <div>
            <label class="block text-sm font-medium mb-2">Status</label>
            <div class="flex flex-wrap gap-2">
              <button
                class="px-3 py-1 rounded-full text-sm border border-gray-200 hover:bg-gray-50 !rounded-full whitespace-nowrap"
              >
                Delivered
              </button>
              <button
                class="px-3 py-1 rounded-full text-sm border border-gray-200 hover:bg-gray-50 !rounded-full whitespace-nowrap"
              >
                Pending
              </button>
              <button
                class="px-3 py-1 rounded-full text-sm border border-gray-200 hover:bg-gray-50 !rounded-full whitespace-nowrap"
              >
                Cancelled
              </button>
            </div>
          </div>
          <div>
            <label class="block text-sm font-medium mb-2">Category</label>
            <div class="flex flex-wrap gap-2">
              <button
                class="px-3 py-1 rounded-full text-sm border border-gray-200 hover:bg-gray-50 !rounded-full whitespace-nowrap"
              >
                Smartphones
              </button>
              <button
                class="px-3 py-1 rounded-full text-sm border border-gray-200 hover:bg-gray-50 !rounded-full whitespace-nowrap"
              >
                Accessories
              </button>
              <button
                class="px-3 py-1 rounded-full text-sm border border-gray-200 hover:bg-gray-50 !rounded-full whitespace-nowrap"
              >
                Tablets
              </button>
            </div>
          </div>
        </div>
        <div class="flex justify-end mt-6 gap-4">
          <button
            class="px-4 py-2 text-sm text-gray-600 hover:bg-gray-50 rounded-button !rounded-button whitespace-nowrap"
            onclick="clearFilters()"
          >
            Clear All
          </button>
          <button
            class="px-4 py-2 text-sm bg-primary text-white hover:bg-primary/90 rounded-button !rounded-button whitespace-nowrap"
            onclick="applyFilters()"
          >
            Apply Filters
          </button>
        </div>
      </div>

      <!-- History List -->
      <div
        id="history-list"
        class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4"
      ></div>

      <div id="heartContainer" class="fixed inset-0 pointer-events-none"></div>

      <!-- Empty State -->
      <div id="emptyState" class="hidden text-center py-16">
        <div class="w-24 h-24 mx-auto mb-6 text-gray-300">
          <i class="ri-history-line ri-4x"></i>
        </div>
        <h3 class="text-xl font-semibold mb-2">No Browsing History</h3>
        <p class="text-gray-500 mb-6">You haven't viewed any products yet.</p>
        <a href="/compare">
        <button
          class="px-6 py-2 bg-primary text-white rounded-button hover:bg-primary/90 !rounded-button whitespace-nowrap"
        >
          Explore Products
        </button>
        </a>
      </div>
    </div>

    <script src="phoneData.js"></script>

    <script>
      const profileButton2 = document.getElementById("profileButton2");
      const profileModal = document.getElementById("profileModal");
      const modalBackdrop = document.getElementById("modalBackdrop");
      let isModalOpen = false;

      function toggleModal() {
        isModalOpen = !isModalOpen;
        profileModal.classList.toggle("hidden");
        modalBackdrop.style.display = isModalOpen ? "block" : "none";
      }

      profileButton2.addEventListener("click", (e) => {
        e.stopPropagation();
        toggleModal();
      });
      document.addEventListener("click", (e) => {
        if (
          isModalOpen &&
          !profileModal.contains(e.target) &&
          !profileButton2.contains(e.target)
        ) {
          toggleModal();
        }
      });

      const mockUserData = {
        name: "Alexander Mitchell",
        email: "alex.mitchell@company.com",
        profileCompletion: 85,
        avatar: "profile-image-url",
      };
    </script>

    <script>
      const profileButton = document.querySelector(".relative button");
      const dropdownMenu = document.querySelector(".relative .hidden");

      profileButton.addEventListener("click", () => {
        dropdownMenu.classList.toggle("hidden");
      });

      document.addEventListener("click", (event) => {
        if (!profileButton.contains(event.target)) {
          dropdownMenu.classList.add("hidden");
        }
      });

      document
        .getElementById("logoutButton")
        .addEventListener("click", function () {
          localStorage.removeItem("wishlist"); // Clear wishlist
        });
    </script>

    <script>
      document
        .getElementById("clearHistory")
        .addEventListener("click", function () {
          localStorage.removeItem("history"); // Remove history from localStorage
          alert("History Cleared!"); // Show confirmation
          location.reload(); // Refresh the page to update UI
        });
    </script>

    <script>
      //   document.getElementById("sortBtn").addEventListener("click", () => {
      //     const sortDropdown = document.getElementById("sortDropdown");
      //     sortDropdown.classList.toggle("hidden");
      //   });

      //   document.addEventListener("click", (e) => {
      //     const sortDropdown = document.getElementById("sortDropdown");
      //     const sortBtn = document.getElementById("sortBtn");
      //     if (!sortBtn.contains(e.target) && !sortDropdown.contains(e.target)) {
      //       sortDropdown.classList.add("hidden");
      //     }
      //   });

      //   function sortOrders(type) {
      //     let sortedOrders = [...phoneData.phones];
      //     switch (type) {
      //       case "recent":
      //         sortedOrders.sort((a, b) => new Date(b.date) - new Date(a.date));
      //         break;
      //       case "oldest":
      //         sortedOrders.sort((a, b) => new Date(a.date) - new Date(b.date));
      //         break;
      //       case "priceHigh":
      //         sortedOrders.sort((a, b) => b.price - a.price);
      //         break;
      //       case "priceLow":
      //         sortedOrders.sort((a, b) => a.price - b.price);
      //         break;
      //     }
      //     displayHistory(sortedOrders);
      //     document.getElementById("sortDropdown").classList.add("hidden");
      //   }

      //add to wish list is above.....
      function addToWishlist(phoneId) {
        // Ensure phoneData is properly structured
        if (
          typeof phoneData === "undefined" ||
          !Array.isArray(phoneData.phones)
        ) {
          console.error("phoneData.phones is not defined or is not an array.");
          return;
        }

        let wishlist = JSON.parse(localStorage.getItem("wishlist")) || [];

        // Find the phone inside phoneData.phones
        let phone = phoneData.phones.find((p) => p.id === phoneId);

        if (!phone) {
          console.error("Phone data not found for ID:", phoneId);
          return;
        }

        if (wishlist.some((p) => p.id === phoneId)) {
          alert("Already in Wishlist!");
          return;
        }

        wishlist.push(phone);
        localStorage.setItem("wishlist", JSON.stringify(wishlist));
        alert("Added to Wishlist!");

        function showNotification(message) {
          const notification = document.getElementById("notification");
          const messageElement = document.getElementById(
            "notification-message"
          );
          messageElement.textContent = message;
          notification.style.transform = "translateX(0)";
          setTimeout(() => {
            notification.style.transform = "translateX(100%)";
          }, 3000);
        }
      }

      function createHearts() {
        // console.log("createHearts function called!"); // Debugging

        const heartContainer = document.getElementById("heartContainer");
        if (!heartContainer) {
          console.error("heartContainer not found!");
          return;
        }

        const heartCount = 10;

        for (let i = 0; i < heartCount; i++) {
          const heart = document.createElement("div");
          heart.classList.add("heart");

          // Randomize the horizontal position
          const randomLeft = Math.random() * 100;
          heart.style.left = `${randomLeft}%`;

          // Randomize the animation duration and delay
          const randomDuration = Math.random() * 2 + 1; // 1s to 3s
          const randomDelay = Math.random() * 1; // 0s to 1s
          heart.style.animationDuration = `${randomDuration}s`;
          heart.style.animationDelay = `${randomDelay}s`;

          // Add the heart to the container
          heartContainer.appendChild(heart);

          // Remove the heart after the animation ends
          heart.addEventListener("animationend", () => {
            heart.remove();
          });
        }
      }

      // Function to re-attach the event listener for the like button
      function attachLikeButtonListener() {
        const likeButton = document.getElementById("likeButton");
        // console.log("likeButton:", likeButton); // Debugging

        if (likeButton) {
          // console.log("likeButton found, attaching event listener..."); // Debugging
          likeButton.addEventListener("click", (e) => {
            // console.log("Event listener fired!"); // Debugging
            e.preventDefault(); // Prevent default button behavior
            // console.log("Like button clicked!"); // Debugging
            createHearts(); // Call the createHearts function
          });
        } else {
          console.error("likeButton not found!"); // Debugging
        }
      }

      const brandImages = {
        Samsung:
          "https://www.designinfo.in/wp-content/uploads/2024/01/Samsung-Galaxy-S24-Ultra-256GB-Titanium-Violet-3.webp",
        Apple:
          "https://m.media-amazon.com/images/I/619f09kK7tL._AC_UF1000,1000_QL80_.jpg",
        Google:
          "https://rukminim2.flixcart.com/image/850/1000/xif0q/mobile/d/y/m/pixel-9-ga05843-in-google-original-imah3pfgd9zadkyx.jpeg?q=90&crop=false",
        OnePlus:
          "https://rukminim2.flixcart.com/image/850/1000/xif0q/mobile/z/i/u/10-pro-5g-ne2211-bv-3-old-oneplus-original-imah4qp5kyyg2qgp.jpeg?q=90&crop=false",
        Xiaomi:
          "https://5.imimg.com/data5/SELLER/Default/2022/7/LQ/OZ/YP/155979352/xiaomi-mi-11-0-2oz-128gb-256gb-new-dual-sim-6-81-smartphone-phone-telephoneeoi-500x500.jpg",
        Oppo: "https://m.media-amazon.com/images/I/81Ww9bOGRfL._AC_UF1000,1000_QL80_.jpg",
        Vivo: "https://rukminim2.flixcart.com/image/850/1000/xif0q/mobile/p/k/w/-original-imagz6tzsqekf2mg.jpeg?q=90&crop=false",
        Realme:
          "https://m.media-amazon.com/images/I/51Jx33Kl0FL._AC_UF1000,1000_QL80_.jpg",
        Asus: "https://28mobile.com/cdn/shop/products/rog-phone-7-ultimate@2x.jpg?v=1682165739",
        Nothing: "https://m.media-amazon.com/images/I/71SgrNQOEqL.jpg",
      };

      const phones = phoneData.phones;

      // Retrieve history from localStorage
      function getHistory() {
        return JSON.parse(localStorage.getItem("history")) || [];
      }

      // Display history
      function displayHistory() {
        const history = getHistory();
        const historyContainer = document.getElementById("history-list");
        const emptyState = document.getElementById("emptyState");

        if (history.length === 0) {
          historyContainer.innerHTML = "";
          emptyState.classList.remove("hidden");
          return;
        }

        emptyState.classList.add("hidden");
        historyContainer.innerHTML = history
          .map(
            (phone) => `
            <div class="bg-white rounded-lg shadow-sm border border-gray-100 p-4 hover:shadow-md transition-shadow">
<div class="flex items-center gap-4">
<img src="${brandImages[phone.brand]}" alt="${
              phone.name
            }" class="w-20 h-20 object-cover rounded">
<div class="flex-1">
<div class="flex justify-between items-start mb-2">
<div>
<h3 class="font-semibold">${phone.name}</h3>
<p class="text-sm text-gray-500">Product ID: ${phone.id}</p>
</div>

<span class="text-lg font-semibold">₹${(
              Math.min(...phone.prices.map((p) => p.price)) * 83
            ).toLocaleString("en-IN")}</span>
</div>
<div class="flex items-center justify-between">
</div>
</div>
</div>
<div class="flex justify-between gap-3 mt-4 border-t pt-4">

    <button
 class="px-3 py-1.5 bg-primary/50 text-sm text-gray-100 hover:text-primary hover:bg-primary/5 rounded-button flex items-center gap-1 !rounded-button whitespace-nowrap "
   onclick="createHearts()">
<i id="heartIcon" class="ri-heart-line cursor-pointer hover:text-red-500 transition-all duration-300"></i>
</button>

<div class="flex justify-end items-center">

     <a href="/compare?phone=${phone.name}">
<button class="px-3 py-1.5 text-sm text-gray-600 hover:text-primary hover:bg-primary/5 rounded-button flex items-center gap-1 !rounded-button whitespace-nowrap">
<i class="ri-eye-line"></i>
View Details
</button></a>
<button
 class="px-3 py-1.5 text-sm text-gray-600 hover:text-primary hover:bg-primary/5 rounded-button flex items-center gap-1 !rounded-button whitespace-nowrap "
   onclick="addToWishlist(${phone.id}); createHearts();">
<i id="heartIcon" class="ri-heart-line cursor-pointer hover:text-red-500 transition-all duration-300"></i>
Add to Wishlist
</button>
</div>
</div>
</div>
            `
          )
          .join("");

        document
          .getElementById("heartIcon")
          .addEventListener("click", function () {
            //   this.classList.toggle("ri-heart-line");
            //   this.classList.toggle("ri-heart-fill");
            //   this.classList.toggle("text-blue-500"); // Change color on click
          });

        attachLikeButtonListener();

        // Close dropdowns when clicking outside
        document.addEventListener("click", () => {
          document.querySelectorAll(".dropdown-content").forEach((dropdown) => {
            dropdown.classList.add("hidden");
          });
        });
      }

      // Initial render
      displayHistory();
    </script>
  </body>
</html>
